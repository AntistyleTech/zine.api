name: api-local

services:
  app:
    build:
      context: .
      args:
        SUPERVISOR_PHP_COMMAND: "php -d variables_order=EGPCS /var/www/html/artisan octane:start --host=0.0.0.0 --port=8000 --watch"
      dockerfile: docker/app/swoole/Dockerfile
      target: local
    hostname: api
    environment:
      APP_ENV: local
      #PHP_IDE_CONFIG: "serverName=api.host.local"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/vendor`) || PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/telescope`)"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/var/www/html
    depends_on:
      - pgsql
    networks:
      - api
      - reverse-proxy



  #  schedule:
  #    build:
  #      context: .
  #      dockerfile: docker/app/Dockerfile
  #      target: local
  #      args:
  #        SUPERVISOR_PHP_COMMAND: "php artisan schedule:work"
  #    restart: unless-stopped
  #    environment:
  #      APP_ENV: local
  #    volumes:
  #      - .:/app
  #    depends_on:
  #      - pgsql
  #      - redis
  #      - mailpit
  #    networks:
  #      - api
  #
  #  queue:
  #    build:
  #      context: .
  #      target: local
  #      dockerfile: docker/app/Dockerfile
  #      args:
  #        SUPERVISOR_PHP_COMMAND: "php artisan queue:work --tries=3"
  #    restart: unless-stopped
  #    environment:
  #      APP_ENV: local
  #    volumes:
  #      - .:/app
  #    depends_on:
  #      - pgsql
  #      - redis
  #      - mailpit
  #    networks:
  #      - api

  pgsql:
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    volumes:
      - pgsql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - api

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    networks:
      - api

  mailpit:
    image: axllent/mailpit:latest
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    volumes:
      - mailpit:/data
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - api

#  minio:
#    image: minio/minio:latest
#    command: server /buckets --console-address ":9001"
#    environment:
#      MINIO_ROOT_USER: minio-user
#      MINIO_ROOT_PASSWORD: minio-password
#    volumes:
#      - minio:/buckets
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    networks:
#      - api

volumes:
  pgsql:
    driver: local

  redis:
    driver: local

  mailpit:
    driver: local

#  minio:
#    driver: local

networks:
  api:
    driver: bridge

  reverse-proxy:
    driver: bridge
    external: true
