name: zine

services:

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/api`) || PathPrefix(`/admin`)"
      - "traefik.http.routers.nginx.service=nginx"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    networks:
      - reverse-proxy
      - api
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: local
    hostname: api
    volumes:
      - ./:/var/www/html
    depends_on:
      - pgsql
    networks:
      - api
    command: php-fpm -F

  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: local
    volumes:
      - ./:/var/www/html
    depends_on:
      - pgsql
    networks:
      - api
    command: php artisan queue:work

  schedule:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: local
    volumes:
      - ./:/var/www/html
    depends_on:
      - pgsql
      - redis
    networks:
      - api
    command: php artisan schedule:work

  pgsql:
    image: postgres:16.1-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgsql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - api

  redis:
    image: redis:6.2-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    networks:
      - api

  mailpit:
    image: axllent/mailpit:latest
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    volumes:
      - mailpit:/data
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - api

#  minio:
#    image: minio/minio:latest
#    command: server /buckets --console-address ":9001"
#    environment:
#      MINIO_ROOT_USER: minio-user
#      MINIO_ROOT_PASSWORD: minio-password
#    volumes:
#      - minio:/buckets
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    networks:
#      - api

volumes:
  pgsql:
    driver: local

  redis:
    driver: local

  mailpit:
    driver: local

#  minio:
#    driver: local

networks:
  reverse-proxy:
    driver: bridge
    name: reverse-proxy

  api:
    driver: bridge
